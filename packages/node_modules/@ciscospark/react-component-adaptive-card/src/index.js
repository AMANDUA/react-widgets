import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import {getAdaptiveCard} from '@ciscospark/react-component-utils';

class AdaptiveCard extends React.Component {
  constructor(props) {
    super(props);
    this.nodeElement = React.createRef();
    this.state = {
      childNodes: []
    };

    this.addChildNode = this.addChildNode.bind(this);
  }

  componentDidMount() {
    if (Object.prototype.hasOwnProperty.call(this, 'nodeElement') && Object.prototype.hasOwnProperty.call(this.nodeElement, 'current')) {
      this.nodeElement.current.appendChild(
        getAdaptiveCard(this.props.cards, this.props.displayName, this.props.sparkInstance, this.addChildNode)
      );
    }
  }

  /**
   * set state to maintain a list of all the DOM nodes
   * @param {object} childNode
   */
  addChildNode(childNode) {
    this.setState((prevState) => ({childNodes: [...prevState.childNodes, childNode]}));
  }

  render() {
    const activityItemMsgClass = classnames('activity-item--adaptive-card');

    return (
      <div
        ref={this.nodeElement}
        className={activityItemMsgClass}
      />
    );
  }
}

AdaptiveCard.propTypes = {
  cards: PropTypes.array,
  displayName: PropTypes.string,
  sparkInstance: PropTypes.object
};

AdaptiveCard.defaultProps = {
  cards: [],
  displayName: '',
  sparkInstance: {}
};

export default AdaptiveCard;
