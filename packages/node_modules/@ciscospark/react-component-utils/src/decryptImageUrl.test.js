import {replaceIndexWithBlobURL, getDecryptedURLs} from './decryptImageUrl';
import {CARD_CONTAINS_IMAGE} from './constants';

describe('helper functions', () => {
  const decryptedURLs = ['blob:http://127.0.0.1:8000/ea6ac312-fd03-407b-9d0a-4dbf62342aa7'];
  const cardsInput = {
    type: 'AdaptiveCard',
    body: [
      {
        type: 'ColumnSet',
        columns: [{
          type: 'Column',
          items: [
            {
              type: 'Image',
              url: '0'
            }
          ]
        }
        ]
      }]
  };
  const expectedOutput = {
    type: 'AdaptiveCard',
    body: [
      {
        type: 'ColumnSet',
        columns: [{
          type: 'Column',
          items: [
            {
              type: 'Image',
              url: 'blob:http://127.0.0.1:8000/ea6ac312-fd03-407b-9d0a-4dbf62342aa7'
            }
          ]
        }
        ]
      }]
  };

  describe('replaceIndexWithBlobURL', () => {
    it('should return cards object by replacing index with blob url', () => {
      expect(replaceIndexWithBlobURL(cardsInput, decryptedURLs)).toEqual(expectedOutput);
    });
  });

  describe('getDecryptedURLs', () => {
    let expectedCardsOutput = {
      type: 'AdaptiveCard',
      body: [
        {
          type: 'Image',
          url: 'blob:http://127.0.0.1:8000/ea6ac312-fd03-407b-9d0a-4dbf62342aa7'
        }]
    };
    let props;
    let getIn;

    expectedCardsOutput = JSON.stringify(expectedCardsOutput);
    const cards = ['{"type":"AdaptiveCard","body":[{"type":"Image","url":0}]}'];

    beforeEach(() => {
      getIn = jest.fn();
      props = {
        getIn,
        cards,
        items: [
          {
            type: CARD_CONTAINS_IMAGE,
            mimeType: 'image/jpeg',
            image: {
              url: '0'
            }
          }],
        share: {
          files: [
            {
              objectUrl: 'blob:http://127.0.0.1:8000/ea6ac312-fd03-407b-9d0a-4dbf62342aa7'
            }
          ],
          getIn() {
            return {
              objectUrl: 'blob:http://127.0.0.1:8000/ea6ac312-fd03-407b-9d0a-4dbf62342aa7'
            };
          }
        }
      };
    });

    it('should get all decrypted urls and return modified cards object', () => {
      expect(getDecryptedURLs(props)).toEqual(expectedCardsOutput);
    });
  });
});
