import {createSelector} from 'reselect';

const getSDKState = (state) => state.spark.get('status');
const getSDKInstance = (state) => state.spark.get('spark');
const getMercuryStatus = (state) => state.mercury.get('status');

const getMeetingsWidgetProps = createSelector(
  [getSDKState, getSDKInstance, getMercuryStatus],
  (sdkState, sdkInstance, mercuryStatusRedux) => {
    // Mercury Status isn't a Redux Record yet, convert to js
    const mercuryStatus = mercuryStatusRedux.toJS();

    // Meetings Widget is ready when SDK has device registered and websockets are connected
    const isReady = sdkState.authenticated && sdkState.registered && !sdkState.hasError &&
      mercuryStatus.hasConnected;

    return {
      isReady,
      mercuryStatus,
      sdkState,
      sdkInstance
    };
  }
);

export default getMeetingsWidgetProps;
