pipeline {
  agent{
    label 'NODE_JS_BUILDER'
  }

  options {
    timeout(time: 1, unit: 'HOURS')
    timestamps()
    ansiColor('xterm')
  }

  stages {
    stage('Install') {
      steps {
        sh '''#!/bin/bash -e
        source ~/.nvm/nvm.sh
        nvm install v8.15.0
        nvm use v8.15.0
        npm install -g npm@6.4.1
        rm -rf node_modules/
        npm install
        git checkout .npmrc
        '''
      }
    }

    stage('Test') {
      steps {
        echo "Starting Tap Tests"
        withCredentials([
          string(credentialsId: 'ddfd04fb-e00a-4df0-9250-9a7cb37bce0e', variable: 'WEBEX_CLIENT_SECRET'),
          usernamePassword(credentialsId: 'SAUCE_LABS_VALIDATED_MERGE_CREDENTIALS', passwordVariable: 'SAUCE_ACCESS_KEY', usernameVariable: 'SAUCE_USERNAME'),
        ]) {
          retry(2){
            sh '''#!/bin/bash -e
            source ~/.nvm/nvm.sh
            nvm unalias default
            nvm use v8.15.0
            # Fix 'nvm is not compatible with the npm config "prefix" option'.
            # This error can happen when this agent's NODE_JS_BUILDER
            # alters the environment.
            npm config delete prefix
            # Run tests
            WEBEX_CLIENT_ID=C873b64d70536ed26df6d5f81e01dafccbd0a0af2e25323f7f69c7fe46a7be340 SAUCE=true npm run test:tap
            '''
          }
        }
      }
    }
  }

  post {
    failure {
      emailext body: '<p>$JOB_BASE_NAME build number $BUILD_NUMBER has failed. For detailed information, please refer to $BUILD_URL</p><pre>${BUILD_LOG_REGEX, regex="^Starting Tap Tests", linesBefore=0, linesAfter=10000, showTruncatedLines=false}</pre>', subject: 'Spark-js-sdk--react-widget--tap Failure', to: 'spark-js-sdk-gating-pipeline-email.94d222a7@ciscospark.pagerduty.com'
    }
  }
}
